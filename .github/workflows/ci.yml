name: ci

on:
  push:
    branches: [ main ]
    paths:
      - "setup.py"
      - ".github/workflows/ci.yml"
      - "python/**"
      - "seqio.c"
      - "seqio.h"

jobs:
  test-on-linux:
    name: Build wheels on Linux for ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [38, 39, 310, 311, 312, 313]
        manylinux-image: [manylinux2014]
        arch: [x86_64, aarch64]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up QEMU
        if: ${{ matrix.arch == 'aarch64' }}
        uses: docker/setup-qemu-action@v1
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine setuptools wheel

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel -U

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: 'cp${{ matrix.python-version }}-*'
          CIBW_SKIP: '*musllinux*'
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_MANYLINUX_*_IMAGE: ${{ matrix.manylinux-image }}
          CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux-image }}

  test-on-windows:
    name: Build wheels on Windows for ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: [38, 39, 310, 311, 312, 313]
        arch: [AMD64]

    steps:
      - uses: actions/checkout@v3
        with:
            submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Setup Zig
        uses: mlugg/setup-zig@v1
        with:
          version: 0.13.0
      - name: build static zlib for windows
        run: |
          cd deps/zlib
          git checkout v1.3.1
          zig build -Doptimize=ReleaseFast
  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine setuptools wheel

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel -U

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: 'cp${{ matrix.python-version }}-*'
          CIBW_SKIP: '*musllinux*'
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_MANYLINUX_*_IMAGE: ${{ matrix.manylinux-image }}
          CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux-image }}
